#+OPTIONS: toc:nil
* WRITTEN repl
  (seqexpr nl)*
* WRITTEN seqExpr
  expr  (*;*  expr )*
* WRITTEN expr
  ifExpr       \\
  ‖ resultExpr \\
  ‖ assignExpr
* WRITTEN assignExpr
  varName *:=* tupleExpr
* TODO ifExpr
  *if* assignExpr *then* assignExpr *else* assignExpr
* TODO valueExpr
  *value* tupleExpr
* TODO tupleEpxr
  tupleComponent  (tupleCatOp tupleComponent )*
* TODO tupleComponent
  orTerm (orOp orTerm)*
* TODO orTerm
  andTerm (andOp andTerm)*
* TODO andTerm
  [notOp] compareTerm (compareOp compareTerm)*
* TODO compareTerm
  term (addOp term)*
* TODO term
  factor (multOp factor)*
* TODO factor
  basicFactor  (*(* [tupleExpr] *)*)*
* TODO basicFactor
  ((*outer*)*  varName   \\
   ‖ number              \\
   ‖ symbol              \\
   ‖ dataConstructor     \\
   ‖ closure             \\
   ‖ varName             \\
   ‖ *(* seqExpr *)*     \\
   ‖ *~* *(* seqExpr *)* \\
  )
* TODO number
  [*~*]digit+[*.* digit+ ][(*e*‖*E*) [*~*] digit+]
* TODO symbol
  upperCase (letter ‖ *_* ‖ digit ‖ *?* ‖ *!*)*
* TODO varName
  lowerCase (letter ‖ *_* ‖ digit ‖ *?* ‖ *!*)*
* TODO dataConstructor
  symbol *(* [tupleExpr] *)*
* TODO application
  factor *(* [tupleExpr] *)*
* TODO closure
  *{* ( (*|* patternAlternative)* ‖ seqExpr) *}*
* TODO patternAlternative
  patternTuple [*!!* guard] *=>* seqExpr
* TODO patternTuple
  [ patternTupleComponent (*,* patternTupleComponent)* ]
* TODO patternTupleComponent
  patternFactor [(*also* patternFactor)* *!* expr]
* TODO patternFactor
  ((*outer*)+ [ *bind* ] var  \\
   ‖ symbol                 \\
   ‖ patternDataConstructor \\
   ‖ number                 \\
   ‖ closure                \\
   ‖ *(* patternTuple *)*   \\
  )                         \\
  [ *(* patternTuple *)* ]
* TODO patternDataConstructor
  symbol *(* patternTuple *)*
